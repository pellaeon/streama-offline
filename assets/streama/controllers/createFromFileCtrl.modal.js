//# sourceMappingURL=createFromFileCtrl.modal.js.map
(function(){function e(e,p,c,u,q,r,t){function g(a){c.file.localFiles(a).then(function(a){a=a.data;b.localFilesEnabled=!0;b.localFiles=a},function(a){"LocalFilesNotEnabled"==a.code&&(b.localFilesEnabled=!1);alertify.error(a.message)})}function h(a,b,k){a.showFiles=1!=a.showFiles||b?!0:!1;a.localFiles&&a.localFiles.length?(k||angular.noop)(a.localFiles):(a.localFiles=[],c.file.localFiles(a.path).then(function(b){b=b.data;a.localFiles=b;(k||angular.noop)(b)}),console.log(a))}function f(a){b.selection=
_.xorBy(b.selection,[a],"path")}function l(a){return _.find(b.matchResult,{file:a})}function m(a){b.matchResult=_.map(b.matchResult,function(b){return _.find(a,{file:b.file})||b});n(3)}function n(a){_.forEach(_.filter(b.matchResult,{status:a}),function(a){a=_.find(b.selection,{path:a.file});f(a)})}var b=this;b.loading=!1;b.localFilesEnabled=!1;b.localFiles=[];b.localDir=[];b.video=null;b.mediaType=q.mediaType;b.uploadStatus={};b.hasMatcherResult=!1;b.loadLocalFiles=g;b.backLocalDirectory=function(){b.localFiles=
[];b.localDir.pop();b.loadLocalFiles(b.localDir.join("/"))};b.openLocalDirectory=h;b.close=function(){p.close()};b.toggleSelectAll=function(){alert("toggleSelectAll needs implementation.")};b.runMatcher=function(){b.isMatcherLoading=!0;b.matchResult=null;var a=_.filter(b.selection,{directory:!1});c.file.matchMetaDataFromFiles(a).then(function(a){a=a.data;b.isMatcherLoading=!1;b.matchResult=a;n(2)})};b.toggleSelection=f;b.toggleDirectorySelection=function(a){a.isSelected=!a.isSelected;a.isSelected?
h(a,!0,function(){_.forEach(a.localFiles,function(a){f(a)})}):_.forEach(a.localFiles,function(d){_.remove(b.selection,{path:d.path});a.showFiles=!1})};b.getMatchForPath=l;b.getMatchDisplay=function(a){a=_.find(b.matchResult,{file:a.path});if("episode"===a.type)return a.showName+" S"+_.padStart(a.season,2,"0")+"E"+_.padStart(a.episodeNumber,2,"0");if("movie"===a.type)return a.title+" ("+a.release_date.substring(0,4)+")";console.log("%c match","color: deeppink; font-weight: bold; text-shadow: 0 0 5px deeppink;",
a)};b.selection=[];b.addAllMatches=function(){var a=_.filter(b.matchResult,function(a){return 1===a.status||5===a.status||6===a.status});0==a.length&&alertify.success("Nothing to add.");c.file.bulkAddMediaFromFile(a).then(function(a){a=a.data;_.some(a,{status:4})?alertify.log("not all files were added unfortunately. This is due to TheMovieDB API LIMIT constraints. Just try again in a couple of seconds :). "):alertify.success("All matches have been added to the database and files connected");m(a)})};
b.addSelectedFile=function(a){var d=_.find(b.matchResult,{file:a.path});c.file.bulkAddMediaFromFile([d]).then(function(a){a=a.data;_.some(a,{status:4})?alertify.log("not all files were added unfortunately. This is due to TheMovieDB API LIMIT constraints. Just try again in a couple of seconds :) "):alertify.success(d.title||d.episodeName+" has been added");m(a)})};b.openMediaDetail=function(a){r.mediaDetailModal({mediaObject:a,isApiMovie:!0,mediaType:a.type})};b.openAdminForm=function(a){a=t.href("admin."+
a.importedType,{showId:a.importedId,movieId:a.importedId,season:a.season});window.open(a,"_blank")};b.isSelected=function(a){return _.some(b.selection,{path:a.path})};b.hasStatus=function(a,b){var c=l(a.path);return c?c.status===b:!1};g("")}angular.module("streama").controller("modalCreateFromFileCtrl",e);e.$inject="$scope $uibModalInstance apiService uploadService dialogOptions modalService $state".split(" ")})();