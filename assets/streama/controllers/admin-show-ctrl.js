//# sourceMappingURL=admin-show-ctrl.js.map
angular.module("streama").controller("adminShowCtrl",["$scope","$q","apiService","$stateParams","modalService","$state","uploadService",function(a,p,f,e,g,q,l){var h=0,k=0;a.seasonOpened=null;a.showLoading=!0;a.hasMovieDBKey=!0;a.listEpisodesForSeason=function(b){return _.filter(a.episodes,{season_number:b})};f.theMovieDb.hasKey().then(function(b){b.data.key||(a.hasMovieDBKey=!1)});f.tvShow.get(e.showId).then(function(b){a.show=b.data;f.tvShow.adminEpisodesForTvShow(e.showId).then(function(b){b=a.episodes=
b.data;if(b.length){a.seasons=_.chain(b).map("season_number").uniq().value();var d=parseInt(e.season)||_.min(b,"season_number").season_number;a.setCurrentSeason(d)}a.showLoading=!1;a.highlightOnDashboard=g.newReleaseModal.bind(g,a.show,"tvShow",b)})});a.openShowModal=function(){g.tvShowModal(a.show,function(b){angular.merge(a.show,b)})};a.addToCurrentNotification=function(){alertify.set({buttonReverse:!0,labels:{ok:"OK",cancel:"Cancel"}});alertify.prompt("Add a description to this TvShow. For instance, tell the users which season you added.",
function(a,c){a&&f.notification.addTvShowToCurrentNotification(e.showId,c).then(function(){alertify.success("The TvShow was added to the current notification queue.")})})};a.addNewEpisode=function(){g.videoModal(null,"manual",a.show,function(b){b=b.data;a.seasons=a.seasons||[];var c=parseInt(b.season_number);-1===a.seasons.indexOf(c)&&a.seasons.push(c);a.episodes.push(b);a.setCurrentSeason(b.season_number)})};a.deleteShow=function(){alertify.set({buttonReverse:!0,labels:{ok:"Yes",cancel:"Cancel"}});
alertify.confirm("Are you sure you want to delete this Show?",function(b){b&&f.tvShow.delete(a.show.id).then(function(){q.go("admin.shows")})})};a.openSeason=function(b){a.seasonOpened=a.seasonOpened!=b?b:null};a.setCurrentSeason=function(b){(a.currentSeason=b)&&a.hasMovieDBKey&&f.theMovieDb.countNewEpisodesForSeason({apiId:a.show.apiId,showId:e.showId,season:b}).then(function(b){a.newEpisodesForSeason=b.data})};var m=function(b){if(a.hasMovieDBKey)return f.theMovieDb.seasonForShow({apiId:a.show.apiId,
showId:e.showId,season:b}).then(function(c){c=c.data;console.log("%c seasonForShow","color: deeppink; font-weight: bold; text-shadow: 0 0 5px deeppink;");a.seasons=a.seasons||[];-1===a.seasons.indexOf(b)&&a.seasons.push(b);a.episodes=a.episodes.concat(c);a.newEpisodesForSeason=null;k=Math.max(k,b);k==b&&a.setCurrentSeason(b);h+=c.length})},n=function(b){for(var c=[],d=0;d<b.length;d++)c.push(m(b[d]));p.all(c).then(function(){a.loading=!1;k=0;alertify.success(h+" Episodes fetched");h=0})};a.fetchEpisodes=
function(){alertify.set({buttonReverse:!0,labels:{ok:"OK",cancel:"Cancel"}});alertify.prompt("For which seasons would you like to fetch the episodes? (Leave blank to fetch for all seasons)",function(b,c){if(b){a.loading=!0;var d=[];if(c){if(-1<c.indexOf("-")){var d=parseInt(c.substring(0,c.indexOf("-"))),e=parseInt(c.substring(c.indexOf("-")+1));if(d>e)var g=d,d=e,e=g;d=_.range(d,e+1)}else d.push(parseInt(c));n(d)}else f.theMovieDb.seasonNumberForShow({apiId:a.show.apiId}).then(function(a){n(a.data)})}})};
a.refetchSeason=function(a){m(a)};a.deleteSeason=function(b){alertify.set({buttonReverse:!0,labels:{ok:"Yes",cancel:"Cancel"}});alertify.confirm("Are you sure you want to remove the entire season "+b+"?",function(c){c&&(a.loading=!0,f.tvShow.removeSeason(e.showId,b).then(function(){a.seasons.splice(a.seasons.indexOf(b),1);a.loading=!1;var c=_.min(a.seasons);c&&a.setCurrentSeason(c)}))})};a.imageUpload={};a.uploadPoster=l.doUpload.bind(l,a.imageUpload,"file/upload.json",function(b){console.log("%c test",
"color: deeppink; font-weight: bold; text-shadow: 0 0 5px deeppink;",b);a.imageUpload.percentage=null;b.error||(a.show.poster_image=b.id,f.tvShow.save(a.show).then(function(b){a.show.poster_image_src=b.data.poster_image_src}))},function(){})}]);